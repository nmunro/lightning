:q
(DEFPACKAG

(in-package lightning/projects)

(defclass component ()
  ((name      :initarg :name      :initform (error "Must provide a name") :reader name)))

(defclass project (component)
  ((path      :initarg :path      :initform (error "Must provide a path") :reader path)
   (pages     :initarg :pages     :initform '()                           :reader pages)
   (templates :initarg :templates :initform '()                           :reader templates)))

(defclass template (component)
  ())

(defclass page (component)
  ())

(defun make-project (name path templates pages )
  (make-instance 'project :name name :path path :templates templates :pages pages))

(defun project (action name &key (path nil pathp))
  (cond
    ((eq action :create)
     (format nil "Creating Project ~A: ~A" name path)
     (ensure-directories-exist path)) ; @TODO: Save a project to the config to get the below working

    ((eq action :delete)
     (format nil "Deleting Project ~A" name path)
     (uiop:delete-directory-tree "" :validate t)) ; @TODO: This doesn't work yet

    (t
     (error "Unrecognised action"))))

(defun template (action project name &key (path nil pathp))
  (format nil "~A Template ~A in ~A from ~A" action name project path))

(defun page (action project name &key (path nil pathp) (template nil templatep))
  (format nil "~A Page ~A in ~A from ~A to ~A" action name project template path))
